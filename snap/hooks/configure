#!/bin/sh -e

# Block snap health when B2 is not yet configured

APPLICATION_KEY_ID="$(snapctl get b2-application-key-id)"
APPLICATION_KEY="$(snapctl get b2-application-key)"
BUCKET="$(snapctl get b2-bucket)"

if [ -z "$APPLICATION_KEY_ID" ]; then
    snapctl set-health blocked "Missing required b2-application-key-id config"
elif [ -z "$APPLICATION_KEY" ]; then
    snapctl set-health blocked "Missing required b2-application-key config"
elif [ -z "$BUCKET" ]; then
    snapctl set-health blocked "Missing required b2-bucket config"
else
    snapctl set-health okay
fi

# Run uploader after each config change so we can start adding images

# FIXME, b2sdk module not found when running from configure script
# usr/bin/python3 $SNAP/bin/uploader.py

# Set imv wait time before showing next picture via snap config

DEFAULT_IMV_DURATION=10
imv_duration="$(snapctl get imv-duration)"

if ! expr "$imv_duration" : '^[0-9]*$' > /dev/null; then
    echo "\"$imv_duration\" is not a valid duration, reveting to $DEFAULT_IMV_DURATION seconds" >&2
    snapctl set imv-duration="$DEFAULT_IMV_DURATION"
    snapctl restart "$SNAP_NAME".imv
fi

# How long do we keep images around?

DEFAULT_REMOVE_AFTER_DAYS=30
remove_after_days="$(snapctl get remove-after-days)"
if ! expr "$remove_after_days" : '^[0-9]*$' > /dev/null; then
    echo "\"$remove_after_days\" is not valid, reveting to $DEFAULT_REMOVE_AFTER_DAYS days" >&2
    snapctl set remove-after-days="$DEFAULT_REMOVE_AFTER_DAYS"
fi
